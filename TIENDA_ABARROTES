class Producto:
    def __init__(self, producto_id, nombre, cantidad, precio):
        self.producto_id = producto_id
        self.nombre = nombre
        self.cantidad = cantidad
        self.precio = precio

    # Getters y Setters
    def get_id(self):
        return self.producto_id

    def set_id(self, producto_id):
        self.producto_id = producto_id

    def get_nombre(self):
        return self.nombre

    def set_nombre(self, nombre):
        self.nombre = nombre

    def get_cantidad(self):
        return self.cantidad

    def set_cantidad(self, cantidad):
        self.cantidad = cantidad

    def get_precio(self):
        return self.precio

    def set_precio(self, precio):
        self.precio = precio


class Inventario:
    def __init__(self):
        self.productos = []

    def agregar_producto(self, producto):
        # Verificar si el ID es único
        for p in self.productos:
            if p.get_id() == producto.get_id():
                print("Error: El ID del producto ya existe.")
                return
        self.productos.append(producto)

    def eliminar_producto(self, producto_id):
        for p in self.productos:
            if p.get_id() == producto_id:
                self.productos.remove(p)
                print(f"Producto con ID {producto_id} eliminado.")
                return
        print("Error: Producto no encontrado.")

    def actualizar_producto(self, producto_id, cantidad=None, precio=None):
        for p in self.productos:
            if p.get_id() == producto_id:
                if cantidad is not None:
                    p.set_cantidad(cantidad)
                if precio is not None:
                    p.set_precio(precio)
                print(f"Producto con ID {producto_id} actualizado.")
                return
        print("Error: Producto no encontrado.")

    def buscar_producto(self, nombre):
        encontrados = [p for p in self.productos if nombre.lower() in p.get_nombre().lower()]
        if encontrados:
            for p in encontrados:
                print(f"ID: {p.get_id()}, Nombre: {p.get_nombre()}, Cantidad: {p.get_cantidad()}, Precio: ${p.get_precio():.2f}")
        else:
            print("No se encontraron productos con ese nombre.")

    def mostrar_inventario(self):
        if self.productos:
            for p in self.productos:
                print(f"ID: {p.get_id()}, Nombre: {p.get_nombre()}, Cantidad: {p.get_cantidad()}, Precio: ${p.get_precio():.2f}")
        else:
            print("El inventario está vacío.")


# Interfaz de Usuario en la Consola
def menu():
    inventario = Inventario()
    while True:
        print("\n--- Menú de Gestión de Inventario - Tienda de Abarrotes ---")
        print("1. Añadir Producto (Ejemplo: Leche, Pan, Frutas, etc.)")
        print("2. Eliminar Producto")
        print("3. Actualizar Producto")
        print("4. Buscar Producto")
        print("5. Mostrar Inventario")
        print("6. Salir")
        opcion = input("Seleccione una opción: ")

        if opcion == '1':
            producto_id = int(input("Ingrese el ID del producto (número único): "))
            nombre = input("Ingrese el nombre del producto (Ejemplo: Leche, Pan, Tomates): ")
            cantidad = int(input("Ingrese la cantidad disponible en inventario: "))
            precio = float(input("Ingrese el precio por unidad del producto (en $): "))
            producto = Producto(producto_id, nombre, cantidad, precio)
            inventario.agregar_producto(producto)

        elif opcion == '2':
            producto_id = int(input("Ingrese el ID del producto a eliminar: "))
            inventario.eliminar_producto(producto_id)

        elif opcion == '3':
            producto_id = int(input("Ingrese el ID del producto a actualizar: "))
            cantidad = input("Ingrese la nueva cantidad disponible (dejar vacío si no desea cambiarla): ")
            precio = input("Ingrese el nuevo precio por unidad (dejar vacío si no desea cambiarlo): ")

            cantidad = int(cantidad) if cantidad else None
            precio = float(precio) if precio else None
            inventario.actualizar_producto(producto_id, cantidad, precio)

        elif opcion == '4':
            nombre = input("Ingrese el nombre del producto a buscar (Ejemplo: Leche, Pan): ")
            inventario.buscar_producto(nombre)

        elif opcion == '5':
            inventario.mostrar_inventario()

        elif opcion == '6':
            print("Gracias por usar el sistema de gestión de inventarios de la tienda de abarrotes.")
            break

        else:
            print("Opción no válida. Intente de nuevo.")

# Llamar al menú
if __name__ == "__main__":
    menu()
